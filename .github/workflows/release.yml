name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Run tests
        run: |
          go build -ldflags "-s -w -X main.version=build -X main.buildTime=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" -o yxa . 
          go test -v -race ./...

  build:
    name: Build CLI
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: ""
          - goos: darwin
            goarch: amd64
            suffix: ""
          - goos: darwin
            goarch: arm64
            suffix: ""
          - goos: windows
            goarch: amd64
            suffix: ".exe"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -ldflags="-s -w" -o "yxa-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.suffix }}" .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: yxa-${{ matrix.goos }}-${{ matrix.goarch }}
          path: yxa-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.suffix }}
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Generate changelog
        id: changelog
        run: |
          CHANGELOG=$(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 2>/dev/null || echo HEAD~10)..HEAD)
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            yxa-linux-amd64/yxa-linux-amd64
            yxa-darwin-amd64/yxa-darwin-amd64
            yxa-darwin-arm64/yxa-darwin-arm64
            yxa-windows-amd64/yxa-windows-amd64.exe
          body: |
            ## Changelog
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ## Installation
            
            ### Linux (amd64)
            ```
            curl -L https://github.com/floppa/yxa-cli/releases/latest/download/yxa-linux-amd64 -o yxa
            chmod +x yxa
            sudo mv yxa /usr/local/bin/
            ```

            ### macOS (Intel)
            ```
            curl -L https://github.com/floppa/yxa-cli/releases/latest/download/yxa-darwin-amd64 -o yxa
            chmod +x yxa
            sudo mv yxa /usr/local/bin/
            ```
            
            ### macOS (Apple Silicon)
            ```
            curl -L https://github.com/floppa/yxa-cli/releases/latest/download/yxa-darwin-arm64 -o yxa
            chmod +x yxa
            sudo mv yxa /usr/local/bin/
            ```
            
            ### Windows
            Download the Windows executable from the assets below and add it to your PATH.
